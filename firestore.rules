rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOfficeMember(officeId) {
      return get(/databases/$(database)/documents/offices/$(officeId)/members/$(request.auth.uid)).exists;
    }

    function isOfficeAdminOrOwner(officeId) {
      let userRole = get(/databases/$(database)/documents/offices/$(officeId)/members/$(request.auth.uid)).data.role;
      return userRole == 'Admin' || userRole == 'Owner';
    }

    match /userProfiles/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
      // Allow authenticated users to query profiles by email
      allow list: if request.auth.uid != null;
    }

    match /users/{userId}/{collection}/{docId} {
      allow read, write, delete: if request.auth.uid == userId;
    }
    
    match /offices/{officeId} {
      // FIX: Allow any authenticated user to QUERY for offices.
      // This is required for the "Join with Code" feature to find an office.
      allow list: if request.auth.uid != null;
      
      // Allow members to GET their specific office details.
      allow get: if isOfficeMember(officeId);
      
      // Allow authenticated users to create offices.
      allow create: if request.auth.uid != null;
      
      // Only the owner can update or delete their office.
      allow update: if get(/databases/$(database)/documents/offices/$(officeId)).data.ownerId == request.auth.uid;
      allow delete: if resource.data.ownerId == request.auth.uid;
      
      match /members/{memberUserId} {
        allow read: if isOfficeMember(officeId);
        allow create, delete: if isOfficeAdminOrOwner(officeId);
        allow update: if isOfficeAdminOrOwner(officeId) || 
                       (request.auth.uid == memberUserId && !('role' in request.resource.data));
      }

      match /rooms/{roomId} {
        allow read: if isOfficeMember(officeId);
        allow create, update, delete: if isOfficeAdminOrOwner(officeId);
      }
      
      match /activityLog/{activityId} {
        allow read: if isOfficeMember(officeId);
        allow create: if request.auth.uid != null;
      }

      match /tasks/{taskId} {
        allow read, write: if isOfficeMember(officeId);
      }
      
      match /meetings/{meetingId} {
        allow read, write: if isOfficeMember(officeId);
      }

      match /generalMessages/{messageId} {
        allow read, write: if isOfficeMember(officeId);
      }

      // Allow any authenticated user to CREATE a request, but only owners can manage them.
      match /joinRequests/{requestId} {
        allow create: if request.auth.uid != null;
        allow read, update, delete: if get(/databases/$(database)/documents/offices/$(officeId)).data.ownerId == request.auth.uid;
      }
    }
    
    match /chatThreads/{threadId} {
      allow read, write: if request.auth.uid in resource.data.participantIds;
      
      match /messages/{messageId} {
        allow read, write: if get(/databases/$(database)/documents/chatThreads/$(threadId)).data.participantIds;
      }
    }
  }
}
